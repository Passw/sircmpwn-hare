use hare::types;

type global = str;
type temporary = str;
type qvoid = void;
type constant = (u32 | u64 | f32 | f64 | str | qvoid);

type value = struct {
	value: (global | temporary | constant),
	_type: const *types::_type,
};

type qinstr = enum {
	ADD,
	ALLOC16,
	ALLOC4,
	ALLOC8,
	AND,
	CALL,
	CAST,
	CEQD,
	CEQL,
	CEQS,
	CEQW,
	CGED,
	CGES,
	CGTD,
	CGTS,
	CLED,
	CLES,
	CLTD,
	CLTS,
	CNED,
	CNEL,
	CNES,
	CNEW,
	COD,
	COPY,
	COS,
	CSGEL,
	CSGEW,
	CSGTL,
	CSGTW,
	CSLEL,
	CSLEW,
	CSLTL,
	CSLTW,
	CUGEL,
	CUGEW,
	CUGTL,
	CUGTW,
	CULEL,
	CULEW,
	CULTL,
	CULTW,
	CUOD,
	CUOS,
	DIV,
	DTOSI,
	EXTS,
	EXTSB,
	EXTSH,
	EXTSW,
	EXTUB,
	EXTUH,
	EXTUW,
	JMP,
	JNZ,
	LOADD,
	LOADL,
	LOADS,
	LOADSB,
	LOADSH,
	LOADSW,
	LOADUB,
	LOADUH,
	LOADUW,
	MUL,
	OR,
	REM,
	RET,
	SAR,
	SHL,
	SHR,
	SLTOF,
	STOREB,
	STORED,
	STOREH,
	STOREL,
	STORES,
	STOREW,
	STOSI,
	SUB,
	SWTOF,
	TRUNCD,
	UDIV,
	UREM,
	XOR,
};
